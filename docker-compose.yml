services:
  reverse-proxy:
    image: traefik:v3.3
    container_name: reverse-proxy
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--log.level=DEBUG"
      - "--accesslog=true"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.middlewares.forward-auth-middleware.forwardauth.address=http://auth-service-api/auth/"
      - "traefik.http.middlewares.forward-auth-middleware.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.forward-auth-middleware.forwardauth.authResponseHeaders=Authorization,X-USER-ROLE"
    networks:
      - services-network

  whoami:
      image: traefik/whoami
      container_name: "whoami"
      networks:
        - services-network
      labels:
        - "traefik.enable=true"
        - "traefik.http.routers.whoami.rule=Host(`whoami.localhost`)"
        - "traefik.http.routers.whoami.entrypoints=web"
        - "traefik.http.routers.whoami.middlewares=forward-auth-middleware"

networks:
  services-network:
    driver: bridge

include:
  - ./apps/auth/docker-compose.yml